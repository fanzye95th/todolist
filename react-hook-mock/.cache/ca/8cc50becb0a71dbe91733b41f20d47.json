{"id":"src/hooks/useInput.js","dependencies":[{"name":"D:\\todolist\\react-hook-mock\\.babelrc","includedInParent":true,"mtime":1596166779875},{"name":"D:\\todolist\\react-hook-mock\\package.json","includedInParent":true,"mtime":1596092646250},{"name":"react","loc":{"line":1,"column":38},"parent":"D:\\todolist\\react-hook-mock\\src\\hooks\\useInput.js","resolved":"D:\\todolist\\react-hook-mock\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useInput;\n\nvar _react = require(\"react\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction useInput(defaultValue) {\n  var _useState = (0, _react.useState)(defaultValue || \"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var onChange = (0, _react.useCallback)(function (event) {\n    setValue(event.target.value);\n  });\n  return [value, onChange, setValue];\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/hooks/useInput.js","original":{"line":1,"column":0}},{"generated":{"line":22,"column":0},"source":"src/hooks/useInput.js","original":{"line":3,"column":15}},{"name":"useInput","generated":{"line":22,"column":9},"source":"src/hooks/useInput.js","original":{"line":3,"column":24}},{"generated":{"line":22,"column":17},"source":"src/hooks/useInput.js","original":{"line":3,"column":15}},{"name":"defaultValue","generated":{"line":22,"column":18},"source":"src/hooks/useInput.js","original":{"line":3,"column":33}},{"generated":{"line":22,"column":30},"source":"src/hooks/useInput.js","original":{"line":3,"column":15}},{"generated":{"line":22,"column":32},"source":"src/hooks/useInput.js","original":{"line":3,"column":47}},{"generated":{"line":23,"column":0},"source":"src/hooks/useInput.js","original":{"line":3,"column":47}},{"generated":{"line":23,"column":18},"source":"src/hooks/useInput.js","original":{"line":4,"column":28}},{"name":"defaultValue","generated":{"line":23,"column":39},"source":"src/hooks/useInput.js","original":{"line":4,"column":37}},{"generated":{"line":23,"column":51},"source":"src/hooks/useInput.js","original":{"line":4,"column":49}},{"generated":{"line":23,"column":55},"source":"src/hooks/useInput.js","original":{"line":4,"column":53}},{"generated":{"line":23,"column":57},"source":"src/hooks/useInput.js","original":{"line":4,"column":28}},{"generated":{"line":23,"column":58},"source":"src/hooks/useInput.js","original":{"line":3,"column":47}},{"generated":{"line":24,"column":0},"source":"src/hooks/useInput.js","original":{"line":3,"column":47}},{"generated":{"line":25,"column":0},"source":"src/hooks/useInput.js","original":{"line":3,"column":47}},{"name":"value","generated":{"line":25,"column":6},"source":"src/hooks/useInput.js","original":{"line":4,"column":9}},{"generated":{"line":25,"column":11},"source":"src/hooks/useInput.js","original":{"line":3,"column":47}},{"generated":{"line":26,"column":0},"source":"src/hooks/useInput.js","original":{"line":3,"column":47}},{"name":"setValue","generated":{"line":26,"column":6},"source":"src/hooks/useInput.js","original":{"line":4,"column":16}},{"generated":{"line":26,"column":14},"source":"src/hooks/useInput.js","original":{"line":3,"column":47}},{"generated":{"line":28,"column":0},"source":"src/hooks/useInput.js","original":{"line":6,"column":2}},{"name":"onChange","generated":{"line":28,"column":6},"source":"src/hooks/useInput.js","original":{"line":6,"column":8}},{"generated":{"line":28,"column":14},"source":"src/hooks/useInput.js","original":{"line":6,"column":16}},{"generated":{"line":28,"column":17},"source":"src/hooks/useInput.js","original":{"line":6,"column":19}},{"generated":{"line":28,"column":41},"source":"src/hooks/useInput.js","original":{"line":6,"column":31}},{"name":"event","generated":{"line":28,"column":51},"source":"src/hooks/useInput.js","original":{"line":6,"column":31}},{"generated":{"line":28,"column":56},"source":"src/hooks/useInput.js","original":{"line":6,"column":36}},{"generated":{"line":28,"column":58},"source":"src/hooks/useInput.js","original":{"line":6,"column":40}},{"name":"setValue","generated":{"line":29,"column":0},"source":"src/hooks/useInput.js","original":{"line":7,"column":4}},{"name":"setValue","generated":{"line":29,"column":4},"source":"src/hooks/useInput.js","original":{"line":7,"column":4}},{"generated":{"line":29,"column":12},"source":"src/hooks/useInput.js","original":{"line":7,"column":12}},{"name":"event","generated":{"line":29,"column":13},"source":"src/hooks/useInput.js","original":{"line":7,"column":13}},{"generated":{"line":29,"column":18},"source":"src/hooks/useInput.js","original":{"line":7,"column":18}},{"name":"target","generated":{"line":29,"column":19},"source":"src/hooks/useInput.js","original":{"line":7,"column":19}},{"generated":{"line":29,"column":25},"source":"src/hooks/useInput.js","original":{"line":7,"column":13}},{"name":"value","generated":{"line":29,"column":26},"source":"src/hooks/useInput.js","original":{"line":7,"column":26}},{"generated":{"line":29,"column":31},"source":"src/hooks/useInput.js","original":{"line":7,"column":12}},{"generated":{"line":29,"column":32},"source":"src/hooks/useInput.js","original":{"line":7,"column":4}},{"generated":{"line":30,"column":0},"source":"src/hooks/useInput.js","original":{"line":8,"column":3}},{"generated":{"line":30,"column":3},"source":"src/hooks/useInput.js","original":{"line":6,"column":19}},{"generated":{"line":30,"column":4},"source":"src/hooks/useInput.js","original":{"line":6,"column":2}},{"generated":{"line":31,"column":0},"source":"src/hooks/useInput.js","original":{"line":10,"column":2}},{"generated":{"line":31,"column":9},"source":"src/hooks/useInput.js","original":{"line":10,"column":9}},{"name":"value","generated":{"line":31,"column":10},"source":"src/hooks/useInput.js","original":{"line":10,"column":10}},{"generated":{"line":31,"column":15},"source":"src/hooks/useInput.js","original":{"line":10,"column":9}},{"name":"onChange","generated":{"line":31,"column":17},"source":"src/hooks/useInput.js","original":{"line":10,"column":17}},{"generated":{"line":31,"column":25},"source":"src/hooks/useInput.js","original":{"line":10,"column":9}},{"name":"setValue","generated":{"line":31,"column":27},"source":"src/hooks/useInput.js","original":{"line":10,"column":27}},{"generated":{"line":31,"column":35},"source":"src/hooks/useInput.js","original":{"line":10,"column":9}},{"generated":{"line":31,"column":36},"source":"src/hooks/useInput.js","original":{"line":10,"column":2}},{"generated":{"line":32,"column":0},"source":"src/hooks/useInput.js","original":{"line":11,"column":1}}],"sources":{"src/hooks/useInput.js":"import { useCallback, useState } from \"react\";\r\n\r\nexport default function useInput(defaultValue) {\r\n  const [value, setValue] = useState(defaultValue || \"\");\r\n\r\n  const onChange = useCallback(event => {\r\n    setValue(event.target.value);\r\n  });\r\n\r\n  return [value, onChange, setValue];\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"32d3a47e637feec755d24fa201db020e","cacheData":{"env":{}}}